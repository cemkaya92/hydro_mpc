/**:
  ros__parameters:
    mission:

      type: "arc"    # "line_to" | "straight" | "arc" | "rounded_rectangle" | "racetrack_capsule"

      common:
        repeat: "loop"             # "none" | "loop" | "pingpong"
        start:
          use_current: true        # if false, use x/y/psi below (ENU)
          x: 0.0
          y: 0.0
          psi: 0.0
        speed: 1.0                 # nominal cruise speed for horizontal pattern (m/s)

      params:
        # Examples (only keep the one matching mission.type)
        # line_to:
        #   goal_xypsi: [6.0, 0.5, 0.0]
        #   duration: 100.0
        # straight:
          # segment_distance: 10.0
        # arc:
          radius: 5.0
          angle: 1.57079632679
          yaw_rate: 0.4
          cw: true
        # rounded_rectangle:
        #   width: 10.0
        #   height: 6.0
        #   corner_radius: 1.0
        #   cw: true
        # racetrack_capsule:
        # straight_length: 12.0
        # radius: 5.0
        # cw: true

      # Quad-specific vertical/phase controls
      takeoff:
        # Waypoint to climb to (NED: z negative for up; ENU: make z positive)
        waypoint: [0.0, 0.0, -5.0]
        speed: 1.0            # m/s

      loiter:
        # Center of loiter (same frame as odometry)
        center: [0.0, 0.0, -2.0]
        radius: 1.5           # meters
        omega: 0.5            # rad/s (angular speed around the circle)

      landing:
        final_altitude: -0.1  # target z for touchdown (NED)
        trigger_radius: 0.6   # start landing when within this distance of target [m]

      target:
        timeout: 0.6          # seconds without target update => target considered lost

      traj:
        v_max: [2.0, 2.0, 1.0]     # max vel used by min-jerk generator [m/s]
        a_max: [2.0, 2.0, 1.0]     # max accel used by min-jerk generator [m/s^2]
        yawrate_max: 1.2      
        yawacc_max: 3.0
        segment_duration: 3.0      # default segment duration [s]